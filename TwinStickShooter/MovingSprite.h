////////////////////////////////////////////////////////////
///	Author: Peter Mulligan
///	Date: 22/03/16
///	Last Edit: 22/03/16
////////////////////////////////////////////////////////////
#ifndef MOVINGSPRITE_HEADER
#define MOVINGSPRITE_HEADER

////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////
#include "AssetManager.h"
#include "..\Gamepad.h"

////////////////////////////////////////////////////////////
///	\brief Screen subclass for running tests
///
////////////////////////////////////////////////////////////
namespace goo
{
	class MovingSprite
	{
	protected:
		////////////////////////////////////////////////////////////
		// Member Variables
		////////////////////////////////////////////////////////////
		goo::AssetManager& m_assets;
		sf::Sprite m_sprite;
		sf::Vector2f m_velocity;
		float m_velocityDeadZone;
		float m_speed;
		float m_speedModifier;

	public:
		////////////////////////////////////////////////////////////
		// Constructor/Destructor
		////////////////////////////////////////////////////////////
		MovingSprite(goo::AssetManager& assets);
		MovingSprite(sf::Vector2f position, goo::AssetManager& assets);
		~MovingSprite();

		////////////////////////////////////////////////////////////
		// Public Functions
		////////////////////////////////////////////////////////////
		virtual void update(sf::Time elapsedTime);
		virtual void draw(sf::RenderWindow& window);

		////////////////////////////////////////////////////////////
		// Getter & Setter Functions
		////////////////////////////////////////////////////////////
		sf::Vector2f getVelocity();
		float getSpeed();
		float getFriction();

		void setVelocity(sf::Vector2f velocity);
		void setSpeed(float speed);
		void setFriction(float friction);
	};
}
#endif