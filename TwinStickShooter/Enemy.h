////////////////////////////////////////////////////////////
///	Author: Peter Mulligan
///	Date: 22/03/16
///	Last Edit: 22/03/16
////////////////////////////////////////////////////////////
#ifndef ENEMY_HEADER
#define ENEMY_HEADER

////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////
#include "AssetManager.h"
#include "Player.h"
#include "..\Gamepad.h"

////////////////////////////////////////////////////////////
///	\brief Screen subclass for running tests
///
////////////////////////////////////////////////////////////
namespace goo
{
	class Enemy
	{
	private:
		////////////////////////////////////////////////////////////
		// Member Variables
		////////////////////////////////////////////////////////////
		goo::AssetManager& m_assets;
		goo::Player& m_player;
		sf::Sprite m_sprite;
		sf::Vector2f m_velocity;
		float m_speed;
		float m_velocityDeadZone;

	public:
		////////////////////////////////////////////////////////////
		// Constructor/Destructor
		////////////////////////////////////////////////////////////
		Enemy(goo::Player& player, goo::AssetManager& assets);
		Enemy(sf::Vector2f position, goo::Player& player, goo::AssetManager& assets);

		////////////////////////////////////////////////////////////
		// Public Functions
		////////////////////////////////////////////////////////////
		void initialise();
		void draw(sf::RenderWindow& window);
		void update(sf::Time elapsedTime);

		sf::Vector2f getPosition();
		sf::Vector2f getVelocity();
		float getSpeed();
		sf::Sprite getSprite();
		sf::Vector2f getScale();

		void setPosition(sf::Vector2f position);
		void setVelocity(sf::Vector2f velocity);
		void setSpeed(float speed);
		void setSprite(sf::Sprite sprite);
		void setScale(sf::Vector2f scale);
		
	};
}
#endif